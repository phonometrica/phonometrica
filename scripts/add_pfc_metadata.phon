#######################################################################################################################
#                                                                                                                     #
# Copyright (C) 2019 Julien Eychenne <jeychenne@gmail.com>                                                            #
#                                                                                                                     #
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public   #
# License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any      #
# later version.                                                                                                      #
#                                                                                                                     #
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied  #
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more       #
# details.                                                                                                            #
#                                                                                                                     #
# You should have received a copy of the GNU General Public License along with this program. If not, see              #
# <http://www.gnu.org/licenses/>.                                                                                     #
#                                                                                                                     #
# Created: 13/03/2019                                                                                                 #
#                                                                                                                     #
# Purpose: Add PFC metadata to annotations in a project.                                                              #
#                                                                                                                     #
#######################################################################################################################


!*
PFC files annotations follow the following naming convention: xxxyyyzg.TextGrid, where xxx is the survey code, yyy is
the speaker code, and z is the task code. The corresponding sound file is named xxxyyyzw.wav. 
This script extracts these metadata from an annotation's file name, and tries to bind it to the corresponding sound
file if it exists. For convenience, we allow other common sound extensions such as FLAC and MP3.
*!


# Add your own extensions here if you use something more exotic
var sound_extensions = [".wav", ".flac", ".mp3"]

# Pattern to find metadata in a TextGrid file
var re = new Regex("^(...)(...)(.)g\\.[tT]ext[gG]rid$")

# PFC tasks
var tasks = {
	g: "Guided conversation",
	l:"Free conversation",
	t: "Text",
	m: "Word list"
}

# Add metadata to a single annotation
function add_metadata(annot)
	print("adding metadata to '" + annot.path + "'")

	# Set properties
	var file = system.get_base_name(annot.path)
	if re.match(file) then
		var survey = re.group(1).to_upper()
		var speaker = survey + re.group(2).to_upper()

		var task = tasks[re.group(3)]
		annot.add_property("Survey", survey)
		annot.add_property("Task", task)
		annot.add_property("Speaker", speaker)
	end

	# Try to bind the annotation to a sound file
	var base = system.strip_extension(annot.path)
	base = base.left(base.length - 1) + "w"
	foreach var ext in sound_extensions do
		var sound = base + ext
		if system.exists(sound) then
			annot.bind_to_sound(sound)
			break
		end
	end
end

# Process all the annotations in the current project
function tag_annotations()
	var annots = phon.get_annotations()
	foreach var annot in annots do
		add_metadata(annot)
	end
	phon.project.refresh()
end

tag_annotations()
#event.connect(event.annotation_loaded, add_metadata)